version: "3.3"

networks:
  traefik-net:
    external:
      name: traefik-net

services:
  traefik:
    image: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.constraints=Label(`traefik.tags`,`public`)"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.tags=public"
        - "traefik.http.routers.api.rule=Host(`traefik.{DOMAIN}`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.docker.network=traefik-net"

  visualizer:
    image: dockersamples/visualizer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=visualizer"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.frontend.entryPoints=http"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.port=8080"
        - "traefik.frontend.rule=Host(`visualizer.{DOMAIN}`)"

  portainer:
    image: portainer/portainer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./data/prometheus:/data"
    command: -H unix:///var/run/docker.sock
    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=portainer"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.frontend.entryPoints=http"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.port=9000"
        - "traefik.frontend.rule=Host(`portainer.{DOMAIN}`)"
